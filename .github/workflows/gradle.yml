# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle
name: CI/CD with Gradle and Docker

on:
  pull_request:
    branches:
      - '**'
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle (including tests)
        run: ./gradlew build

  docker-build-and-push:
    name: Build and Push Docker Image
    environment: production
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    env:
      CURATION_API_KEY: ${{ secrets.CURATION_API_KEY }}
      CURATION_BASE_URI: ${{ secrets.CURATION_BASE_URI }}

      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_SECRET: ${{ secrets.DOCKER_SECRET }}
      DOCKER_REPOSITORY: ${{ vars.DOCKER_REPOSITORY }}

      EMAIL_SENDER_USERNAME: ${{ vars.EMAIL_SENDER_USERNAME }}
      EMAIL_SENDER_SECRET: ${{ vars.EMAIL_SENDER_SECRET }}

      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

      NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
      NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}

      IMAGE_NAME: ${{ vars.IMAGE_NAME }}
      IMAGE_TAG: ${{ vars.IMAGE_TAG }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build Docker image with bootBuildImage
        run: |
          echo "Prepare API Docs ..."
          ./gradlew clean openapi3
          echo "Copy API json ..."
          ./gradlew copyOasToDocs
          echo "build image ..."
          ./gradlew bootBuildImage --imageName=docker.io/$DOCKER_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG

      - name: Login to DockerHub
        run: echo "$DOCKER_SECRET" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Push Docker image
        run: docker push docker.io/$DOCKER_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
