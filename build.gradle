plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'ododock'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}


configurations {
    asciidoctorExt
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
}

repositories {
    mavenCentral()
}

//tasks.named("bootBuildImage") {
//    builder = "dashaun/builder:tiny"
//    environment = ["BP_NATIVE_IMAGE" : "true"]
//}


dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.1'

    // bind
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Database
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

}



test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

task copyDocs(type: Copy) {
    from 'build/docs/asciidoc'
    into 'src/main/resources/static/docs'
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
    finalizedBy copyDocs
}

bootJar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}") {
        into 'static/docs'
    }
}

clean {
    delete file('src/main/generated')
}
