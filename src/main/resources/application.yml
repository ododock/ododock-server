server:
  forward-headers-strategy: native

spring:
  web:
    resources:
      add-mappings: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${EMAIL_SENDER_USERNAME}
    password: ${EMAIL_SENDER_SECRET}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  jpa:
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        default_batch_fetch_size: 500
    show-sql: true
    generate-ddl: true
  # spring security
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${HOST_DOMAIN_URI}
      client:
        registration:
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${HOST_DOMAIN_URI}/login/oauth2/code/google
            authorization-grant-type: authorization_code
            scope:
              - https://www.googleapis.com/auth/userinfo.email
              - https://www.googleapis.com/auth/userinfo.profile
          naver:
            client-name: naver
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${HOST_DOMAIN_URI}/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope:
              - name
              - email
              - profileImage
              - gender
              - birthdate
              - ageGroup
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: email
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

# Logging
logging:
  level:
    p6spy: debug
    org.apache.coyote: debug
    org.springframework.security: debug
    org.springframework.web.reactive: debug
    reactor.netty.http.client: debug

springdoc:
  api-docs:
    path: /build/api-spec/openapi3.json
  swagger-ui:
    enabled: true
    path: /swagger-ui.html

app:
  jwt:
    access-token-expiry: 60
    refresh-token-expiry: 1440
  clients:
    curation:
      base-url: ${CURATION_BASE_URI}
      api-key: ${CURATION_API_KEY}
    content:
      base-url: ${CONTENT_BASE_URI}
      api-key: ${CONTENT_API_KEY}